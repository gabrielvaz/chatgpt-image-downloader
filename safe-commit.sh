#!/bin/bash

# Fun√ß√£o para commits robustos e r√°pidos - macOS compatible
# Evita travamentos e timeouts

commit_safe() {
    local message="${1:-Update files}"
    
    echo "üîÑ Iniciando commit seguro..."
    
    # Verifica se h√° mudan√ßas
    if [ -z "$(git status --porcelain)" ]; then
        echo "‚úÖ Nada para commit"
        return 0
    fi
    
    # Adiciona arquivos principais primeiro
    echo "üìÅ Adicionando arquivos principais..."
    git add *.js *.css *.html *.json 2>/dev/null || true
    
    # Depois adiciona documenta√ß√£o
    echo "üìÑ Adicionando documenta√ß√£o..."
    git add *.md 2>/dev/null || true
    
    # Adiciona scripts
    echo "üîß Adicionando scripts..."
    git add *.sh 2>/dev/null || true
    
    # Commit sem verifica√ß√£o para ser mais r√°pido
    echo "üíæ Fazendo commit..."
    git commit -m "$message" --no-verify --quiet || {
        echo "‚ùå Falha no commit detalhado, tentando commit simples..."
        git commit -m "Update" --no-verify --quiet 2>/dev/null || {
            echo "‚ùå Commit falhou - verificando problemas..."
            git status --porcelain
            return 1
        }
    }
    
    echo "‚úÖ Commit realizado: $message"
    git log --oneline -1
}

# Chama a fun√ß√£o se script for executado diretamente
if [ "${BASH_SOURCE[0]}" == "${0}" ]; then
    commit_safe "$@"
fi
